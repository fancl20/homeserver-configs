apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-push
  namespace: continuous
spec:
  params:
  - name: image
    type: string
  - name: base_tag
    type: string
    default: testing-20251020 # {"$imagepolicy": "flux-system:debian:tag"}
  - name: fetcher_image
    default: registry.local.d20.fan/fancl20/fetcher:v0.3.0-testing-20250610 # {"$imagepolicy": "flux-system:fetcher"}
    type: string
  workspaces:
  - name: dockerconfig
  - name: scripts
  tasks:
  - name: fetch-latest
    taskRef:
      name: fetch-latest
    workspaces:
    - name: scripts
      workspace: scripts
    params:
    - name: FETCHER_IMAGE
      value: $(params.fetcher_image)
  - name: check-tag
    taskRef:
      name: skopeo
    params:
    - name: ARGS
      value:
      - inspect
      - docker://registry.local.d20.fan/fancl20/$(params.image):$(tasks.fetch-latest.results.VERSION)-$(params.base_tag)
  - name: build-push
    when:
    - input: $(tasks.check-tag.results.EXIT_CODE)
      operator: notin
      values: ["0"]
    taskRef:
      name: kaniko
    workspaces:
    - name: dockerconfig
      workspace: dockerconfig
    params:
    - name: IMAGE
      value: registry.local.d20.fan/fancl20/$(params.image):$(tasks.fetch-latest.results.VERSION)-$(params.base_tag)
    - name: CONTEXT
      value: git://github.com/fancl20/homeserver-configs.git#refs/heads/main
    - name: CONTEXT_SUB_PATH
      value: images/$(params.image)
    - name: EXTRA_ARGS
      value:
      - --cache=true
      - --build-arg
      - BASE_TAG=$(params.base_tag)
      - --build-arg
      - VERSION=$(tasks.fetch-latest.results.VERSION)
      - --build-arg
      - URL=$(tasks.fetch-latest.results.URL)
    timeout: "4h"
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: debian
  namespace: flux-system
spec:
  image: docker.io/library/debian
  interval: 1h
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: debian
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: debian
  filterTags:
    pattern: '^testing-(?P<timestamp>\d+)$'
    extract: '$timestamp'
  policy:
    alphabetical:
      order: asc
