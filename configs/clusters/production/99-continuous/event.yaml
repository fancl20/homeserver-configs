apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerconfig
  namespace: continuous
data:
  config.json: "{}"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: build-push
  namespace: continuous
spec:
  params:
  - name: image
  resourcetemplates:
  - apiVersion: tekton.dev/v1
    kind: PipelineRun
    metadata:
      generateName: $(tt.params.image)-build-push-
      namespace: continuous
    spec:
      pipelineRef:
        name: build-push
      workspaces:
      - name: dockerconfig
        configmap:
          name: dockerconfig
      - name: scripts
        configmap:
          name: $(tt.params.image)-scripts
      params:
      - name: image
        value: $(tt.params.image)
      timeouts:
        pipeline: "0"
        tasks: "0"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: images-build-push
  namespace: continuous
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: images-build-push
  namespace: continuous
subjects:
- kind: ServiceAccount
  name: images-build-push
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: images-build-push
subjects:
- kind: ServiceAccount
  name: images-build-push
  namespace: continuous
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: images-build-push
  namespace: continuous
spec:
  serviceAccountName: images-build-push
  triggers:
  - name: fetcher
    bindings:
    - ref: fetcher
    template:
      ref: build-push
  - name: dae
    bindings:
    - ref: dae
    template:
      ref: build-push
  - name: fava
    bindings:
    - ref: fava
    template:
      ref: build-push
  - name: roon
    bindings:
    - ref: roon
    template:
      ref: build-push
  - name: workspace
    bindings:
    - ref: workspace
    template:
      ref: build-push
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: images-build-push
  namespace: continuous
spec:
  schedule: "00 04 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: images-build-push
            image: curlimages/curl:8.12.0 # {"$imagepolicy": "flux-system:curl"}
            args: ["curl", "-X", "POST", "--data", "{}", "el-images-build-push.continuous.svc.cluster.local:8080"]
          restartPolicy: Never
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: curl
  namespace: flux-system
spec:
  image: quay.io/curl/curl
  interval: 1h
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: curl
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: curl
  policy:
    semver:
      range: "*"
