apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build-images
  namespace: continuous
spec:
  entrypoint: main
  volumeClaimTemplates:
  - metadata:
      name: work
      namespace: continuous
    spec:
      accessModes: ['ReadWriteOnce']
      resources:
        requests:
          storage: 32Gi
  templates:
  - name: main
    steps:
    - - name: clone
        template: clone
        arguments:
          parameters:
          - name: repo
            value: https://github.com/fancl20/homeserver-configs/
          - name: branch
            value: main
    - - name: build-and-push
        template: build-and-push
        arguments:
          parameters:
          - name: path
            value: 'images/{{item}}'
          - name: image
            value: 'fancl20/{{item}}'
          - name: base_tag
            value: testing-20250908 # {"$imagepolicy": "flux-system:debian:tag"}
        withItems:
        - dae
        - fava
        - roon
  - name: clone
    inputs:
      parameters:
      - name: repo
      - name: branch
    container:
      volumeMounts:
      - mountPath: /work
        name: work
      image: docker.io/alpine/git:v2.49.1 # {"$imagepolicy": "flux-system:git"}
      workingDir: /work
      args:
      - clone
      - --depth
      - '1'
      - --branch
      - '{{inputs.parameters.branch}}'
      - --single-branch
      - '{{inputs.parameters.repo}}'
      - .
  - name: build-and-push
    inputs:
      parameters:
      - name: path
      - name: image
      - name: base_tag
    steps:
    - - name: update
        template: update
        arguments:
          parameters:
          - name: path
            value: '{{inputs.parameters.path}}'
    - - name: image
        template: image
        arguments:
          parameters:
          - name: path
            value: '{{inputs.parameters.path}}'
          - name: image
            value: '{{inputs.parameters.image}}:{{steps.update.outputs.parameters.version}}-{{inputs.parameters.base_tag}}'
          - name: fetcher
            value: docker.io/library/python:3.13.7-slim # {"$imagepolicy": "flux-system:python"}
          - name: base_tag
            value: '{{inputs.parameters.base_tag}}'
  - name: update
    inputs:
      parameters:
      - name: path
    container:
      image: docker.io/library/python:3.13.7-slim # {"$imagepolicy": "flux-system:python"}
      volumeMounts:
      - mountPath: /work
        name: work
      workingDir: '/work/{{inputs.parameters.path}}'
      command:
      - python3
      args:
      - update.py
      - version
    outputs:
      parameters:
      - name: version
        valueFrom:
          path: '/work/{{inputs.parameters.path}}/VERSION'
  - name: image
    inputs:
      parameters:
      - name: path
      - name: image
      - name: fetcher
      - name: base_tag
    container:
      readinessProbe:
        exec:
          command: [sh, -c, 'buildctl debug workers']
      image: docker.io/moby/buildkit:v0.24.0-rootless # {"$imagepolicy": "flux-system:buildkit"}
      securityContext:
        seccompProfile:
          type: Unconfined
        appArmorProfile:
          type: Unconfined
        runAsUser: 1000
        runAsGroup: 1000
      volumeMounts:
      - name: work
        mountPath: /work
      workingDir: '/work/{{inputs.parameters.path}}'
      env:
      - name: BUILDKITD_FLAGS
        value: --oci-worker-no-process-sandbox
      command:
      - buildctl-daemonless.sh
      args:
      - build
      - --frontend
      - dockerfile.v0
      - --local
      - context=.
      - --local
      - dockerfile=.
      - --output
      - 'type=image,name=registry.default/{{inputs.parameters.image}},push=true,registry.insecure=true'
      - --opt
      - 'build-arg:FETCHER={{inputs.parameters.fetcher}}'
      - --opt
      - 'build-arg:BASE_TAG={{inputs.parameters.base_tag}}'
